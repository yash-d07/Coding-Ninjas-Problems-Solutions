#include <bits/stdc++.h> 
long long int solution(vector<int> &value){
    long long int prev = value[0];
    long long int prev2 = 0;
    long long int curr;
    long long int pick, notpick;
    for(int i = 1;i<value.size(); i++){
        pick = value[i];
        if(i>1)
            pick += prev2;
        notpick = 0 + prev;
        curr = max(pick,notpick);
        prev2 = prev;
        prev = curr;
    }
    return prev;
}
long long int houseRobber(vector<int>& valueInHouse)
{
    if(valueInHouse.size() == 1) return valueInHouse[0];
    vector<int> temp1,temp2;
    for(int i = 0;i<valueInHouse.size(); i++){
        if(i!=0)
            temp2.push_back(valueInHouse[i]);
        if(i!=valueInHouse.size()-1)
            temp1.push_back(valueInHouse[i]);        
    }

    return max(solution(temp1),solution(temp2));
}
