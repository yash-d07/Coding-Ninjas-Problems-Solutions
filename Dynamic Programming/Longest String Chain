#include <bits/stdc++.h> 

bool ifcheck(string &str1, string &str2)
{
    if(str1.size() != str2.size()+1) return false;
    int first = 0, second = 0;

    while(first < str1.size()){
       
       if(str1[first] == str2[second])
       { first++;
        second++;}

        else{
            first++;
        }
    }
    if(first == str1.size() && second == str2.size()) return true;
    return false;
}

bool comp(string &s1, string &s2)
{
    return s1.size() < s2.size();
}

int longestStrChain(vector<string> &arr)
{
    int n = arr.size();
    vector<int> dp(n,1);
    sort(arr.begin(),arr.end(),comp);

    int maxi = 1;

    for(int i = 1; i<n; i++)
    {
        for(int prev = 0; prev<i; prev++)
        {
          if(ifcheck(arr[i],arr[prev]) && dp[prev]+1 > dp[i])
          {
              dp[i] = dp[prev] + 1;
          }
        }
        if(dp[i] > maxi)
        {
            maxi = dp[i];
        }
    }
    return maxi;
}
