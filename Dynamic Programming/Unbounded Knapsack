#include <bits/stdc++.h> 
int unboundedKnapsack(int n, int w, vector<int> &profit, vector<int> &weight)
{
    vector<vector<int>> dp(n,vector<int> (w+1,0));
    for(int i=0;i<=w;i++)
    {
        dp[0][i] = ((int)(i/weight[0])) * profit[0];
    }
    
    for(int i=1;i<n;i++)
    {
        for(int j=0;j<=w;j++)
        {
            int notpick = 0 + dp[i-1][j];
            int pick = -1e7;
            if(j>=weight[i]){
                pick = profit[i] + dp[i][j - weight[i]];
            }
            dp[i][j] = max(pick,notpick);
        }
    }
    return dp[n-1][w];
}
