#include <bits/stdc++.h> 
int minSubsetSumDifference(vector<int>& arr, int n)
{
   int tsum = 0;
   for(int i=0;i<n;i++) tsum+=arr[i];
    int k = tsum;
  vector<vector<int>> dp(n,vector<int>(k+1,0));
 for(int i=0;i<n;i++) dp[i][0] = true;
    dp[0][arr[0]] = true;
    
    for(int ind = 1; ind<n; ind++)
    {
        for(int target=1;target<=k; target++)
        {
             bool nottake = dp[ind-1][target];
             bool take = false;
             if(arr[ind]<=target)
             {
                take = dp[ind-1][target - arr[ind]];
             } 
                dp[ind][target] = take|nottake;
        }
    }

    int mini=1e9;
    for(int s1 = 0;s1<=tsum/2;s1++)
    {
        if(dp[n-1][s1] == true)
        {
            mini = min(mini,abs((tsum-s1)-s1));
        }
    }
   return mini;
}
